services:
    app.entity_manager:
        class: App\Entity\EntityManager
        arguments: [@doctrine.orm.entity_manager]

    app.person.repository:
        class: App\Entity\PersonRepository
        factory_service: doctrine.orm.entity_manager
        factory_method: getRepository
        arguments: [App:Person]

    app.text.repository:
        class: App\Entity\TextRepository
        factory_service: doctrine.orm.entity_manager
        factory_method: getRepository
        arguments: [App:Text]

    repository.wiki_site:
        class: App\Entity\WikiSiteRepository
        factory_service: doctrine.orm.entity_manager
        factory_method: getRepository
        arguments: [App:WikiSite]

    wiki_reader:
        class: App\Service\WikiReader
        arguments: [@mediawiki_client, @repository.wiki_site]

    mediawiki_client:
        class: App\Service\MediawikiClient
        arguments: [@buzz]

    admin.person:
        class: App\Admin\PersonAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: library_main, label: admin.person }
        arguments: [null, App\Entity\Person, App:Admin\Person]
        calls:
            - [setMaxPerPage, [%admin_max_per_page%]]
            - [setRepository, [@app.person.repository]]

    admin.book:
        class: App\Admin\BookAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: library_main, label: admin.book }
        arguments: [null, App\Entity\Book, App:Admin\Book]
        calls:
            - [setMaxPerPage, [%admin_max_per_page%]]
            - [setTextRepository, [@app.text.repository]]

    admin.text:
        class: App\Admin\TextAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: library_main, label: admin.text }
        arguments: [null, App\Entity\Text, App:Admin\Text]
        calls:
            - [setMaxPerPage, [%admin_max_per_page%]]

    admin.series:
        class: App\Admin\SeriesAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: library_main, label: admin.series }
        arguments: [null, App\Entity\Series, App:Admin\Series]
        calls:
            - [setMaxPerPage, [%admin_max_per_page%]]

    admin.label:
        class: App\Admin\LabelAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: library_main, label: admin.label }
        arguments: [null, App\Entity\Label, App:Admin\Label]
        calls:
            - [setMaxPerPage, [%admin_max_per_page%]]

    admin.category:
        class: App\Admin\CategoryAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: library_main, label: admin.category }
        arguments: [null, App\Entity\Category, App:Admin\Category]
        calls:
            - [setMaxPerPage, [%admin_max_per_page%]]

    admin.sequence:
        class: App\Admin\SequenceAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: library_main, label: admin.sequence }
        arguments: [null, App\Entity\Sequence, App:Admin\Sequence]
        calls:
            - [setMaxPerPage, [%admin_max_per_page%]]

    admin.text_comment:
        class: App\Admin\TextCommentAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: library_main, label: admin.text_comment }
        arguments: [null, App\Entity\TextComment, App:Admin\TextComment]
        calls:
            - [setMaxPerPage, [%admin_max_per_page%]]

    admin.site_notice:
        class: App\Admin\SiteNoticeAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: library_secondary, label: admin.site_notice }
        arguments: [null, App\Entity\SiteNotice, App:Admin\SiteNotice]
        calls:
            - [setMaxPerPage, [%admin_max_per_page%]]

    admin.featured_book:
        class: App\Admin\FeaturedBookAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: library_secondary, label: admin.featured_book }
        arguments: [null, App\Entity\FeaturedBook, App:Admin\FeaturedBook]
        calls:
            - [setMaxPerPage, [%admin_max_per_page%]]

    admin.foreign_book:
        class: App\Admin\ForeignBookAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: library_secondary, label: admin.foreign_book }
        arguments: [null, App\Entity\ForeignBook, App:Admin\ForeignBook]
        calls:
            - [setMaxPerPage, [%admin_max_per_page%]]

    admin.site:
        class: App\Admin\SiteAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: library_secondary, label: admin.site }
        arguments: [null, App\Entity\Site, App:Admin\Site]
        calls:
            - [setMaxPerPage, [%admin_max_per_page%]]

    admin.book_site:
        class: App\Admin\BookSiteAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: library_secondary, label: admin.book_site }
        arguments: [null, App\Entity\BookSite, App:Admin\BookSite]
        calls:
            - [setMaxPerPage, [%admin_max_per_page%]]

    admin.wiki_site:
        class: App\Admin\WikiSiteAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: library_secondary, label: admin.wiki_site }
        arguments: [null, App\Entity\WikiSite, App:Admin\WikiSite]
        calls:
            - [setMaxPerPage, [%admin_max_per_page%]]

    admin.question:
        class: App\Admin\QuestionAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: library_secondary, label: admin.question }
        arguments: [null, App\Entity\Question, App:Admin\Question]
        calls:
            - [setMaxPerPage, [%admin_max_per_page%]]

    admin.license:
        class: App\Admin\LicenseAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: library_secondary, label: admin.license }
        arguments: [null, App\Entity\License, App:Admin\License]
        calls:
            - [setMaxPerPage, [%admin_max_per_page%]]

    admin.book_link:
        class: App\Admin\BookLinkAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: library_links, label: admin.book_link }
        arguments: [null, App\Entity\BookLink, App:Admin\BookLink]
        calls:
            - [setMaxPerPage, [%admin_max_per_page%]]

    admin.text_link:
        class: App\Admin\TextLinkAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: library_links, label: admin.text_link }
        arguments: [null, App\Entity\TextLink, App:Admin\TextLink]
        calls:
            - [setMaxPerPage, [%admin_max_per_page%]]

    admin.book_isbn:
        class: App\Admin\BookIsbnAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: library_links, label: admin.book_isbn }
        arguments: [null, App\Entity\BookIsbn, App:Admin\BookIsbn]
        calls:
            - [setMaxPerPage, [%admin_max_per_page%]]

    admin.book_author:
        class: App\Admin\BookAuthorAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: library_links, label: admin.book_author }
        arguments: [null, App\Entity\BookAuthor, App:Admin\BookAuthor]
        calls:
            - [setMaxPerPage, [%admin_max_per_page%]]

    admin.text_author:
        class: App\Admin\TextAuthorAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: library_links, label: admin.text_author }
        arguments: [null, App\Entity\TextAuthor, App:Admin\TextAuthor]
        calls:
            - [setMaxPerPage, [%admin_max_per_page%]]

    admin.text_translator:
        class: App\Admin\TextTranslatorAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: library_links, label: admin.text_translator }
        arguments: [null, App\Entity\TextTranslator, App:Admin\TextTranslator]
        calls:
            - [setMaxPerPage, [%admin_max_per_page%]]

    admin.series_author:
        class: App\Admin\SeriesAuthorAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: library_links, label: admin.series_author }
        arguments: [null, App\Entity\SeriesAuthor, App:Admin\SeriesAuthor]
        calls:
            - [setMaxPerPage, [%admin_max_per_page%]]

    admin.work_entry:
        class: App\Admin\WorkEntryAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: library_intern, label: admin.work_entry }
        arguments: [null, App\Entity\WorkEntry, App:Admin\WorkEntry]
        calls:
            - [setMaxPerPage, [%admin_max_per_page%]]

    admin.user:
        class: App\Admin\UserAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: library_intern, label: admin.user }
        arguments: [null, App\Entity\User, App:Admin\User]
        calls:
            - [setMaxPerPage, [%admin_max_per_page%]]

    admin.user_text_contrib:
        class: App\Admin\UserTextContribAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: library_intern, label: admin.user_text_contrib }
        arguments: [null, App\Entity\UserTextContrib, App:Admin\UserTextContrib]
        calls:
            - [setMaxPerPage, [%admin_max_per_page%]]


    twig.extension.chitanka:
        class: App\Twig\Extension
        tags:
            - { name: twig.extension }
    twig.extension.text:
        class: Twig_Extensions_Extension_Text
        tags:
            - { name: twig.extension }
    twig.extension.debug:
        class: Twig_Extension_Debug
        tags:
            - { name: twig.extension }

    app.responder:
        class: App\Service\Responder
        arguments: [@twig, @app.entity_manager, %content_dir%, %use_http_cache%, %kernel.debug%]

    kernel.listener:
        class: App\Listener\KernelListener
        arguments: [@app.responder]
        tags:
            - { name: kernel.event_subscriber }

    comment.listener:
        class: App\Listener\CommentListener
        arguments: [@mailer, @app.entity_manager]
        tags:
            - { name: kernel.event_listener, event: fos_comment.comment.post_persist, method: onCommentPostPersist }
            - { name: kernel.event_listener, event: fos_comment.thread.post_persist, method: onThreadPostPersist }

    doctrine.listener:
        class: App\Listener\DoctrineListener
        tags:
            - { name: doctrine.dbal.default_event_listener }
            #- { name: doctrine.common.event_listener }

    feedback_form:
        class: App\Form\Type\FeedbackType
        tags:
           -  { name: form.type }

    text_rating_form:
        class: App\Form\Type\TextRatingType
        tags:
           -  { name: form.type }

    text_label_form:
        class: App\Form\Type\TextLabelType
        tags:
           -  { name: form.type }

    label_form:
        class: App\Form\Type\LabelType
        tags:
           -  { name: form.type }

    comment_form:
        class: App\Form\Type\CommentType
        arguments: [%fos_comment.model.comment.class%]
        tags:
           -  { name: form.type }
