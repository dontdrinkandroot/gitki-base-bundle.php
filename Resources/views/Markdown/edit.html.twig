{% extends 'DdrGitkiBundle::browse.html.twig' %}
{% block title %} - {{ path }} - Edit{% endblock %}
{% block body_class %}wiki edit page{% endblock %}
{% block actions %}
{% endblock %}
{% block main_content %}
    <div class="markdown-page">
        <div class="row editor">
            <div class="col-md-6">
                <div class="btn-toolbar edit-actions" role="toolbar" aria-label="Toolbar with button groups">
                    <div class="btn-group" role="group" aria-label="Headings">
                        <button type="button" class="btn btn-default h1-action" title="Change to first level heading">
                            H1
                        </button>
                        <button type="button" class="btn btn-default h2-action" title="Change to second level heading">
                            H2
                        </button>
                        <button type="button" class="btn btn-default h3-action" title="Change to third level heading">
                            H3
                        </button>
                        <button type="button" class="btn btn-default h4-action" title="Change to fourth level heading">
                            H4
                        </button>
                    </div>
                    <div class="btn-group" role="group" aria-label="Text Style">
                        <button type="button" class="btn btn-default bold-action" title="Change to bold">
                            <i class="fa fa-bold"></i>
                        </button>
                        <button type="button" class="btn btn-default italic-action" title="Change to italic">
                            <i class="fa fa-italic"></i>
                        </button>
                    </div>
                    <div class="btn-group" role="group" aria-label="Links">
                        <button type="button" class="btn btn-default internal-link-action" title="Add internal link">
                            <i class="fa fa-link"></i>
                        </button>
                        <button type="button" class="btn btn-default external-link-action" title="Add external link">
                            <i class="fa fa-globe"></i>
                        </button>
                    </div>
                </div>
                {{ form(form, { 'attr': {'class' : 'edit' }}) }}
            </div>
            <div class="col-md-6">
                <div id="preview">
                    <div class="loading-indicator">
                        <div class="spinner">
                            <span class="fa fa-refresh fa-spin"></span>
                        </div>
                    </div>
                    <div class="markdown-html"></div>
                </div>
            </div>
        </div>
    </div>
{% endblock main_content %}
{% block modals %}
    <div class="modal fade" id="externalLinkModal" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                    <h4 class="modal-title">Add external link</h4>
                </div>
                <div class="modal-body">
                    <form>
                        <div class="form-group">
                            <label for="external-link-text" class="control-label">Text:</label>
                            <input type="text" class="form-control" id="external-link-text" required="required" />
                        </div>
                        <div class="form-group">
                            <label for="external-link-url" class="control-label">Url:</label>
                            <input type="url" class="form-control" id="external-link-url" required="required" />
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary">Add link</button>
                </div>
            </div>
        </div>
    </div>
    <div class="modal fade" id="internalLinkModal" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                    <h4 class="modal-title">Add internal link</h4>
                </div>
                <div class="modal-body">
                    <form>
                        <div class="form-group">
                            <label for="interal-link-text" class="control-label">Text:</label>
                            <input type="text" class="form-control" id="internal-link-text" required="required" />
                        </div>
                        <div class="form-group">
                            <label for="internal-link-url" class="control-label">File:</label>
                            <input type="url" class="form-control" id="internal-link-file" required="required" />
                        </div>
                    </form>
                    <ul id="file-suggestions">
                    </ul>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary">Add link</button>
                </div>
            </div>
        </div>
    </div>
{% endblock %}
{% block javascript %}
    {{ parent() }}
    <script type="text/javascript" src="{{ asset('bundles/ddrgitki/js/holdlock.js') }}"></script>
    <script type="text/javascript">
        var holdLock = new HoldLock("{{ path('ddr_gitki_file', {'path': path, 'action': 'holdlock'}) }}");
    </script>
    <script type="text/javascript">
        $("form.edit").submit(function (event) {
            holdLock.cancel();
        });
    </script>
    <script type="text/javascript">

        var previewUrl = "{{ path('ddr_gitki_file', {'path': path, 'action': 'preview'}) }}";

        function Preview(input, preview) {

            var self = this;
            var originalMarkdown = input.val();
            this.typeTimeout = undefined;

            this.update = function () {

                var newMarkdown = input.val();
                var submitDisabled = originalMarkdown == newMarkdown;
                $("#form_actions_save").prop('disabled', submitDisabled);

                $('.loading-indicator .spinner').show();
                $.post(previewUrl, {'markdown': newMarkdown})
                        .done(function (data) {
                            preview.html(data);
                            $('.loading-indicator .spinner').hide();
                        })
                        .fail(function (data) {
                            console.error(data);
                            $('.loading-indicator .spinner').hide();
                        });
            };

            input.bind('input propertychange', function () {
                clearTimeout(self.typeTimeout);
                self.typeTimeout = setTimeout(function () {
                    self.update();
                }, 500);
            });

            this.update();
        }

        var preview = new Preview($("#form_content"), $("#preview .markdown-html"));
    </script>
    <script type="text/javascript">
        function MarkdownEditor() {

            var markdownEditor = this;
            var $editArea = $("#form_content");
            var filesUrl = "{{ path('ddr_gitki_meta_files_json', {'currentpath':app.request.attributes.get('path')}) }}";
            var currentPath = "{{ app.request.attributes.get('path') }}";
            var files = null;

            function repeat(str, n) {
                var text = '';
                return new Array(n + 1).join(str);
            }

            function getSelection() {
                var markDown = $editArea.val();
                var selectionStart = $editArea[0].selectionStart;
                var selectionEnd = $editArea[0].selectionEnd;
                var before = markDown.substring(0, selectionStart);
                var selected = markDown.substring(selectionStart, selectionEnd);
                var after = markDown.substring(selectionEnd, markDown.length);
                return {
                    'selectionStart': selectionStart,
                    'selectionEnd': selectionEnd,
                    'before': before,
                    'selected': selected,
                    'after': after
                }
            }

            $('.edit-actions .bold-action').click(function () {
                var selection = getSelection();
                var newMarkDown = selection.before + '**' + selection.selected + '**' + selection.after;
                $editArea.val(newMarkDown);
                $editArea.trigger('propertychange');
            });

            $('.edit-actions .italic-action').click(function () {
                var selection = getSelection();
                var newMarkDown = selection.before + '*' + selection.selected + '*' + selection.after;
                $editArea.val(newMarkDown);
                $editArea.trigger('propertychange');
            });

            $('.edit-actions .h1-action').click(function () {
                var selection = getSelection();
                var newMarkDown = selection.before + selection.selected;
                newMarkDown += "\n" + repeat('=', selection.selected.length) + selection.after;
                $editArea.val(newMarkDown);
                $editArea.trigger('propertychange');
            });

            $('.edit-actions .h2-action').click(function () {
                var selection = getSelection();
                var newMarkDown = selection.before + selection.selected;
                newMarkDown += "\n" + repeat('-', selection.selected.length) + selection.after;
                $editArea.val(newMarkDown);
                $editArea.trigger('propertychange');
            });

            $('.edit-actions .h3-action').click(function () {
                var selection = getSelection();
                var newMarkDown = selection.before + '### ' + selection.selected + selection.after;
                $editArea.val(newMarkDown);
                $editArea.trigger('propertychange');
            });

            $('.edit-actions .h4-action').click(function () {
                var selection = getSelection();
                var newMarkDown = selection.before + '#### ' + selection.selected + selection.after;
                $editArea.val(newMarkDown);
                $editArea.trigger('propertychange');
            });

            $('.edit-actions .external-link-action').click(function () {
                var selection = getSelection();
                console.log(selection);
                if (selection.selected) {
                    var text = $('#external-link-text').val(selection.selected);
                }
                $('#externalLinkModal').modal('show');
            });

            $('#externalLinkModal .btn.btn-primary').click(function () {
                var selection = getSelection();
                var url = $('#external-link-url').val();
                var text = $('#external-link-text').val();
                var newMarkDown = selection.before + '[' + text + '](' + url + ')' + selection.after;
                $editArea.val(newMarkDown);
                $('#externalLinkModal').modal('hide');
                $('#external-link-url').val('');
                $('#external-link-text').val('');
                $editArea.trigger('propertychange');
            });

            $('.edit-actions .internal-link-action').click(function () {
                var selection = getSelection();
                console.log(selection);
                if (selection.selected) {
                    var text = $('#internal-link-text').val(selection.selected);
                }
                $('#internalLinkModal').modal('show');
                if (null === files) {
                    $.get(filesUrl, function (data) {
                        files = data;
                        files.forEach(function (file) {

                            var displayTitle = file.title;
                            if (null === displayTitle) {
                                displayTitle = file.name;
                            }

                            var suggestion = $('<li></li>');
                            suggestion.data(file);
                            suggestion.addClass('suggestion');

                            var titleElement = $('<span></span>');
                            titleElement.addClass('title');
                            titleElement.html(displayTitle);
                            suggestion.append(titleElement);

                            var pathElement = $('<span></span>');
                            pathElement.addClass('path');
                            pathElement.html(file.absolutePath);
                            suggestion.append(pathElement);

                            $('#file-suggestions').append(suggestion);

                            suggestion.click(function () {
                                var data = $(this).data();
                                $('#internal-link-file').val(data.relativePath);
                            });
                        });
                    });
                }
                $('#internal-link-file').keyup(function () {
                    var filterText = $('#internal-link-file').val().toLowerCase();
                    if (null !== files && filterText) {
                        $('.suggestion').each(function (suggestion) {
                            var $this = $(this);
                            var data = $this.data();
                            if (
                                    data.absolutePath.toLowerCase().indexOf(filterText) !== -1
                                    || (data.title !== null && data.title.toLowerCase().indexOf(filterText) !== -1)
                            ) {
                                $this.show();
                            } else {
                                $this.hide();
                            }
                        });
                    }
                });

                $('#internalLinkModal .btn.btn-primary').click(function () {
                    var selection = getSelection();
                    var path = $('#internal-link-file').val();
                    var text = $('#internal-link-text').val();
                    var newMarkDown = selection.before + '[' + text + '](' + path + ')' + selection.after;
                    $editArea.val(newMarkDown);
                    $('#internalLinkModal').modal('hide');
                    $('#external-link-file').val('');
                    $('#external-link-text').val('');
                    $editArea.trigger('propertychange');
                });
            });
        }
        new MarkdownEditor();
    </script>
{% endblock %}
