name: "Continuous Integration"

on: push

jobs:
    phpunit:
        name: "PHPUnit"
        runs-on: ubuntu-latest
        services:
            elasticsearch:
                image: elasticsearch:7.17.18
                ports:
                    - 9200:9200
                env:
                    discovery.type: single-node
                options: >-
                    --health-cmd "curl http://localhost:9200/_cluster/health"
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 10
        env:
            fail-fast: false
            SYMFONY_REQUIRE: ${{matrix.symfony-require}}
            SYMFONY_DEPRECATIONS_HELPER: ${{matrix.symfony-deprecations-helper}}
        strategy:
            matrix:
                include:
                    -   php-version: "8.3"
                        symfony-require: "6.4.*"
                        deps: "lowest"
                        symfony-deprecations-helper: "disabled=1"
                    -   php-version: "8.3"
                        symfony-require: "6.4.*"
                        deps: "highest"
                        symfony-deprecations-helper: "max[direct]=0"

        steps:
            -   name: "Checkout"
                uses: "actions/checkout@v2"
            -   name: "Install PHP"
                uses: "shivammathur/setup-php@v2"
                with:
                    php-version: "${{ matrix.php-version }}"
                    coverage: "pcov"
                    ini-values: "zend.assertions=1"
            -   name: "Allow symfony/flex globally"
                run: "composer global config --no-plugins allow-plugins.symfony/flex true"
            -   name: "Globally install symfony/flex"
                run: |
                    composer global config --no-plugins allow-plugins.symfony/flex true
                    composer global require --no-progress --no-scripts --no-plugins symfony/flex
            -   name: "Validate composer"
                run: "composer validate"
            -   name: "Install dependencies with Composer"
                uses: "ramsey/composer-install@v2"
                with:
                    dependency-versions: "${{ matrix.deps }}"
            -   name: "Run PHPUnit"
                run: "vendor/bin/phpunit --coverage-clover=coverage.clover.xml --log-junit log.junit.xml"
                continue-on-error: "${{ matrix.deps == 'lowest' }}"
            -   name: "Upload coverage"
                uses: "actions/upload-artifact@v2"
                if: matrix.php-version == '8.3' && matrix.deps == 'highest' && matrix.symfony-require == '6.4.*'
                with:
                    name: "coverage"
                    path: |
                        coverage.clover.xml
                        log.junit.xml

    psalm:
        name: Psalm
        runs-on: ubuntu-latest
        env:
            SYMFONY_REQUIRE: "6.4.*"
        steps:
            -   name: "Checkout code"
                uses: "actions/checkout@v2"
            -   name: "Install PHP"
                uses: "shivammathur/setup-php@v2"
                with:
                    php-version: "8.3"
            -   name: "Allow symfony/flex globally"
                run: "composer global config --no-plugins allow-plugins.symfony/flex true"
            -   name: "Globally install symfony/flex and psalm"
                run: |
                    composer global config --no-plugins allow-plugins.symfony/flex true
                    composer global require --no-progress --no-scripts --no-plugins symfony/flex vimeo/psalm
            -   name: "Validate composer"
                run: "composer validate"
            -   name: "Install dependencies with Composer"
                uses: "ramsey/composer-install@v2"
            -   name: "Run psalm"
                run: "psalm"

    sonarcloud:
        name: "SonarCloud"
        runs-on: ubuntu-latest
        needs: phpunit
        steps:
            -   name: Checkout
                uses: actions/checkout@v2
                with:
                    fetch-depth: 0
            -   name: Download coverage
                uses: actions/download-artifact@v4.1.7
                with:
                    name: coverage
            -   name: Fix code coverage paths
                run: |
                    sed -i 's@'$GITHUB_WORKSPACE'@/github/workspace@g' coverage.clover.xml
                    sed -i 's@'$GITHUB_WORKSPACE'@/github/workspace@g' log.junit.xml
            -   name: SonarCloud Scan
                uses: sonarsource/sonarcloud-github-action@v2.1.1
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                    SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
